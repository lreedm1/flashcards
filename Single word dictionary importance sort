def weight_words(terms_and_defs, dictionary_path, directory, file_name='word stats.md'):
    words = ''
    for i in terms_and_defs:
        words += i + ' '
        for j in terms_and_defs[i]:
            words += j + ' '
    words = words.lower()

    illegal_characters = punctuation_list.replace("'", '')
    words = words.replace("'", "â€™")
    for i in illegal_characters:
        words = words.replace(i, " ")

    words = words.split(" ")
    words = [i for i in words if len(i) > 1]
    print("Counting...")
    counted = {}
    for i in words:
        try:
            counted[i] += 1
        except KeyError:
            counted[i] = 1
    words = [[i[0], i[1]] for i in counted.items() if i[1] > 1]
    words.sort(key=lambda x: x[1], reverse =True)
        
    counts = find_words_in_dictionary(words, dictionary_path)

    counts.sort(key=lambda x: x[1])
    scores = [[j[0],i - j[2]] for i, j in enumerate(counts)]
    scores_dict = {i[0]:i[1] for i in scores}
    max, min = scores[0][1], scores[-1][1]
    scores = [[i[0], (i[1] - min) / (max - min)] for i in scores]
    scores = [[j[0], scores_dict[j[0]] * (j[3])] for j in counts]
    scores.sort(key=lambda x: x[1], reverse=True)
    max, min = scores[0][1], scores[-1][1]
    scores = [[i[0], (i[1] - min) / (max - min)] for i in scores]
    scores.sort(key=lambda x: x[1], reverse=True)

    print_statement = ""
    for i in scores:
        scalar = round(i[1] * 100)
        print_statement += f"{scalar} - {i[0]}\n"
    write(directory + "/" + file_name, print_statement)
    print("Wrote word statistics to the file {file_name}")

    scores_dict = {i[0]:i[1] for i in scores}
    return scores_dict

def find_words_in_dictionary(words, dictionary_path):
    start = timeit.default_timer()    
    with open(dictionary_path, 'r') as f:
        dictionary = {j:i for i,j in enumerate(f.read().split(','))}
    stop = timeit.default_timer()
    print(f'time to read dictionary: {stop - start}')
    words_in_dictionary = []
    for i in range(len(words)):
        try:
            word = words[i][0]
            count = words[i][1]
            words_in_dictionary.append([word,dictionary[word], i, count])
        except KeyError:
            pass
    return words_in_dictionary